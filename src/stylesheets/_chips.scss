
$stack_top: 26px;
$stack_bottom: 13px;
$stack_width: 75px;

@mixin stack($dir) {
  content: '';
  position: absolute;
  width: $stack_width;
  background:    inline-image($dir + '.png') no-repeat unquote($dir) center;
  -webkit-mask:  inline-image('mask-' + $dir + '-webkit.png') no-repeat unquote($dir) center;
  mask:          url(image-url('mask.svg', true, false) + '#chip-mask-' + $dir);
  @if $dir == 'bottom' {
    bottom: -$stack_bottom;
    height: $stack_bottom;
  }
  @if $dir == 'top' {
    top: -$stack_top;
    height: $stack_top;
  }

}

#bets-interface{ 
  margin-bottom:12pt;
  .stack-group {
    min-height: 50px;
    border: 1px solid white;
  }
}


.stack {

  // ensure those with a count of zero are not visible
  // use !important here because display is set with more specific selectors below with stack-group
  // this data-count=0 rule should be trumping everything and I don't want to write it again below. 
  
  &[data-count='0']{
    display:none !important;
  }
  
  // set up the text 3d transformation for the text on the chip
  &[data-value] span.value { 
    display: block;
    position: relative;
    top: -$stack_top + 3px;
    text-align: center;
    @include transform(rotateX(50deg) rotateZ(21deg));
    pointer-events: none;
  }
  
  // for those with a count, we add in the special background/masks
  &[data-count] {
    position:relative; 
    background: inline-image('middle.png') repeat center ($stack_top + 1);
    width: $stack_width;
    margin: $stack_top 0 $stack_bottom; 
    display:inline-block;
    vertical-align: bottom;
    
    // add before/after pseudo-selectors for the top/bottom backgrounds/masks
    &:before { @include stack('top'); }
    &:after  { @include stack('bottom'); }
  } 
}

